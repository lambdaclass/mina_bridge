{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_add_base",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_add_scalar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080806040523461002d57600160ff1981816007541617600755600b541617600b556112b590816100338239f35b600080fdfe608080604052600436101561001357600080fd5b60e0600035811c9182631ed7831c14610c8f575081632ade388014610a305781633e5e3c23146109ac5781633f7286f41461092857816366d9a9a0146107a257816385226c811461067b578163916a17c61461041857508063b5508aa9146102db578063ba414fa6146102b6578063d0ce104a14610235578063e20c9f71146101a1578063ee324929146100d85763fa7626d4146100b057600080fd5b346100d35760003660031901126100d357602060ff600754166040519015158152f35b600080fd5b346100d35760003660031901126100d35760405163771602f760e01b81527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000060048201526001602482015260208160448173__$2412af110404eb2b232af38199405c3460$__5af4801561019557600090610162575b6101609061015a611058565b90611080565b005b506020813d821161018d575b8161017b60209383610ee7565b810103126100d357610160905161014e565b3d915061016e565b6040513d6000823e3d90fd5b346100d35760003660031901126100d357604051806013549182815260208091019260136000527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090916000905b828210610215576102118561020581890382610ee7565b60405191829182610d0f565b0390f35b83546001600160a01b0316865294850194600193840193909101906101ee565b346100d35760003660031901126100d35760405163771602f760e01b81527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4660048201526001602482015260208160448173__$b6ca1b0b24ebe0f4cca739e4a3ccfdea5a$",
    "sourceMap": "316:532:35:-:0;;;;;;;1594:4:11;316:532:35;;;;1594:4:11;316:532:35;;;1594:4:11;316:532:35;3166:4:15;316:532:35;;;3166:4:15;316:532:35;;;;;;;;;;;",
    "linkReferences": {
      "lib/Fields.sol": {
        "Base": [
          {
            "start": 699,
            "length": 20
          }
        ],
        "Scalar": [
          {
            "start": 350,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608080604052600436101561001357600080fd5b60e0600035811c9182631ed7831c14610c8f575081632ade388014610a305781633e5e3c23146109ac5781633f7286f41461092857816366d9a9a0146107a257816385226c811461067b578163916a17c61461041857508063b5508aa9146102db578063ba414fa6146102b6578063d0ce104a14610235578063e20c9f71146101a1578063ee324929146100d85763fa7626d4146100b057600080fd5b346100d35760003660031901126100d357602060ff600754166040519015158152f35b600080fd5b346100d35760003660031901126100d35760405163771602f760e01b81527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000060048201526001602482015260208160448173__$2412af110404eb2b232af38199405c3460$__5af4801561019557600090610162575b6101609061015a611058565b90611080565b005b506020813d821161018d575b8161017b60209383610ee7565b810103126100d357610160905161014e565b3d915061016e565b6040513d6000823e3d90fd5b346100d35760003660031901126100d357604051806013549182815260208091019260136000527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090916000905b828210610215576102118561020581890382610ee7565b60405191829182610d0f565b0390f35b83546001600160a01b0316865294850194600193840193909101906101ee565b346100d35760003660031901126100d35760405163771602f760e01b81527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4660048201526001602482015260208160448173__$b6ca1b0b24ebe0f4cca739e4a3ccfdea5a$",
    "sourceMap": "316:532:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;;;1572:26:11;316:532:35;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;;;-1:-1:-1;;;762:10:35;;236:77:4;316:532:35;762:10;;1671:64:11;683:1:35;236:77:4;;;1671:64:11;762:10:35;316:532;236:77:4;316:532:35;762:5;:10;;;;;;316:532;762:10;;;316:532;782:57;236:77:4;;;:::i;:::-;782:57:35;;:::i;:::-;316:532;762:10;;;;;;;;;;;;;;;;:::i;:::-;;;2376:77:4;;;;782:57:35;236:77:4;;762:10:35;;;;;-1:-1:-1;762:10:35;;;316:532;;236:77:4;316:532:35;236:77:4;;;;;316:532:35;;;;;;-1:-1:-1;;316:532:35;;;;;;;2421:18:18;316:532:35;;;;;;;;;;2421:18:18;316:532:35;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;;;-1:-1:-1;;;505:10:35;;236:77:4;316:532:35;505:10;;1671:64:11;432:1:35;236:77:4;;;1671:64:11;505:10:35;316:532;236:77:4;316:532:35;505:5;:10;;;;;;316:532;505:10;;;525:55;236:77:4;;;:::i;316:532:35:-;;;;;;-1:-1:-1;;316:532:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;2273:18:18;316:532:35;;;;:::i;:::-;1671:64:11;316:532:35;;1671:64:11;;;:::i;:::-;316:532:35;;;;;;;;2273:18:18;316:532:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:532:35;;;;;;;-1:-1:-1;316:532:35;;;;;-1:-1:-1;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;;-1:-1:-1;316:532:35;;;;;;;;;-1:-1:-1;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;3190:18:18;316:532:35;;;;:::i;:::-;;1671:64:11;316:532:35;;1671:64:11;;;:::i;:::-;316:532:35;;;;;;;3190:18:18;316:532:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1671:64:11;;;:::i;:::-;316:532:35;;-1:-1:-1;;;;;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;316:532:35;;;;;;;;;;;;-1:-1:-1;;;;;;316:532:35;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;316:532:35;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;316:532:35;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;316:532:35;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;316:532:35;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;316:532:35;;;;;;;;;;;;;;;-1:-1:-1;;;;;;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;2707:18:18;316:532:35;;;;:::i;:::-;1671:64:11;316:532:35;;1671:64:11;;;:::i;:::-;316:532:35;;;;;;;;2707:18:18;316:532:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:532:35;;;;;;;-1:-1:-1;316:532:35;;;;;-1:-1:-1;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;;-1:-1:-1;316:532:35;;;;;;;;;-1:-1:-1;316:532:35;;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;2883:26:18;316:532:35;;;;:::i;:::-;;1671:64:11;316:532:35;;1671:64:11;;;:::i;:::-;316:532:35;;;;;;;2883:26:18;316:532:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1671:64:11;;;:::i;:::-;316:532:35;;-1:-1:-1;;;;;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;;;;3038:18:18;316:532:35;;;;;;;;;;3038:18:18;316:532:35;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;;;;3331:16:18;316:532:35;;;;;;;;;;3331:16:18;316:532:35;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;3485:19:18;316:532:35;;;;:::i;:::-;1671:64:11;316:532:35;;1671:64:11;;;:::i;:::-;316:532:35;;;;;;;;3485:19:18;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1671:64:11;;;:::i;:::-;316:532:35;;-1:-1:-1;;;;;316:532:35;;;;;;;;;;;;:::i;:::-;;1671:64:11;316:532:35;;1671:64:11;;;:::i;:::-;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:532:35;;;;;;-1:-1:-1;;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;;;;;;;;;;;;;;;;;-1:-1:-1;316:532:35;;-1:-1:-1;316:532:35;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;2563:16:18;316:532:35;;;;;;;;;;2563:16:18;316:532:35;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;316:532:35;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;316:532:35;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;316:532:35;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;316:532:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1671:64:11;316:532:35;1671:64:11;;;;;;;;;;;316:532:35;1671:64:11;:::o;:::-;316:532:35;;;1671:64:11;;;;;;;;;;316:532:35;;;;;;1671:64:11;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;316:532:35;;;1671:64:11;316:532:35;;;-1:-1:-1;;316:532:35;1671:64:11;;316:532:35;1671:64:11;:::i;:::-;;;;-1:-1:-1;1671:64:11;;;;:::o;:::-;;;:::o;1819:584::-;1873:7;316:532:35;;;;;;;;;1873:7:11;316:532:35;;;;1896:14:11;:::o;1869:528::-;-1:-1:-1;2946:104:11;;;1980:374;;2367:19;;:::o;1980:374::-;316:532:35;;;2196:43:11;;;316:532:35;;;-1:-1:-1;;;1671:64:11;;;;2196:43;;;316:532:35;1671:64:11;;;;;;;;;;;;;;;2086:175;;1671:64;;;;;;316:532:35;1671:64:11;2086:175;;;316:532:35;;;;;;1671:64:11;316:532:35;;1671:64:11;;;;;;;:::i;:::-;;;2086:175;;;;;;;;;:::i;:::-;2047:232;;;;;;;:::i;:::-;2196:43;316:532:35;;;2312:27:11;;1671:64;;;;2196:43;2312:27;1671:64;316:532:35;;;;1671:64:11;;;;2297:42;2367:19;:::o;1671:64::-;;;;316:532:35;;;1671:64:11;-1:-1:-1;;;1671:64:11;;;;;;316:532:35;1671:64:11;316:532:35;;;;;;;;;;;:::o;236:77:4:-;1671:64:11;316:532:35;1671:64:11;;;;:::i;:::-;236:77:4;1671:64:11;;-1:-1:-1;;;236:77:4;;;;:::o;5476:178:11:-;;;5552:6;;;5548:100;;;5476:178;;;;;:::o;5548:100::-;316:532:35;;;;;;;;;;;;;;;-1:-1:-1;;;316:532:35;;;;5579:30:11;316:532:35;;;;;;;;;;;;;;;;:::i;:::-;5579:30:11;;;5262:203;;5548:100;;;;;5262:203;316:532:35;;;5293:41:11;316:532:35;;;;;;;;;;;;;;;;-1:-1:-1;;;316:532:35;;;;5293:41:11;316:532:35;;;;;;;;;;;-1:-1:-1;;;316:532:35;;;;;;;1671:64:11;5353:31;;;;;316:532:35;;;;;;;;;;;-1:-1:-1;;;316:532:35;;;;;;;;;;;1671:64:11;5403:31;2946:104;;;;2452:359;;5262:203;316:532:35;;;;;;;;;;2820:14:11;316:532:35;;;2820:14:11;316:532:35;5262:203:11;;;;;;;2452:359;316:532:35;;2652:67:11;;;316:532:35;;;-1:-1:-1;;;316:532:35;;;1671:64:11;2712:4;316:532:35;;;1671:64:11;2652:67;;;1671:64;;;;;;;;;;;;;2541:196;;1671:64;;;;;;;2541:196;;;316:532:35;;;;;;1671:64:11;316:532:35;;1671:64:11;;;;;;;:::i;2541:196::-;2506:245;;;;;;;:::i;:::-;;2452:359;;;;;;;",
    "linkReferences": {
      "lib/Fields.sol": {
        "Base": [
          {
            "start": 648,
            "length": 20
          }
        ],
        "Scalar": [
          {
            "start": 299,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_add_base()": "d0ce104a",
    "test_add_scalar()": "ee324929"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_add_base\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_add_scalar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Fields.t.sol\":\"FieldsTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":msgpack/=lib/msgpack/\"],\"viaIR\":true},\"sources\":{\"lib/Fields.sol\":{\"keccak256\":\"0x630ee37613ecc159f6a818d296ff692b4e93c33145c0959e6cc59957c6a773b9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cb585a9aaa39c97049b570ff6eda55fc4db2958e60d717361d2a4ad2048ad045\",\"dweb:/ipfs/QmSmysNqbvrfqzHsSCkRHErWjF4M7i7Mj32WTVP1bVuFQL\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"test/Fields.t.sol\":{\"keccak256\":\"0x57593266c0a5bc0f787d7aba264efb7e48a34e9d1f168a6c9cbd7da2ed44f8bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://059a397a2b96e57b59d34aef50c377c8824d539cbb13d5f04e000ed0f4bb655c\",\"dweb:/ipfs/QmcRLnJutVfNHp4zFjhXXgSqJbMePSqzxaf4kKvXg6BZ1H\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_add_base"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_add_scalar"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "msgpack/=lib/msgpack/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Fields.t.sol": "FieldsTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/Fields.sol": {
        "keccak256": "0x630ee37613ecc159f6a818d296ff692b4e93c33145c0959e6cc59957c6a773b9",
        "urls": [
          "bzz-raw://cb585a9aaa39c97049b570ff6eda55fc4db2958e60d717361d2a4ad2048ad045",
          "dweb:/ipfs/QmSmysNqbvrfqzHsSCkRHErWjF4M7i7Mj32WTVP1bVuFQL"
        ],
        "license": "GPL-3.0"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "test/Fields.t.sol": {
        "keccak256": "0x57593266c0a5bc0f787d7aba264efb7e48a34e9d1f168a6c9cbd7da2ed44f8bc",
        "urls": [
          "bzz-raw://059a397a2b96e57b59d34aef50c377c8824d539cbb13d5f04e000ed0f4bb655c",
          "dweb:/ipfs/QmcRLnJutVfNHp4zFjhXXgSqJbMePSqzxaf4kKvXg6BZ1H"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Fields.t.sol",
    "id": 48957,
    "exportedSymbols": {
      "Base": [
        1781
      ],
      "FieldsTest": [
        48956
      ],
      "Scalar": [
        2132
      ],
      "Test": [
        15923
      ],
      "console": [
        25693
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:810:35",
    "nodes": [
      {
        "id": 48836,
        "nodeType": "PragmaDirective",
        "src": "39:24:35",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 48838,
        "nodeType": "ImportDirective",
        "src": "65:41:35",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48957,
        "sourceUnit": 15924,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48837,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 15923,
              "src": "73:4:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48840,
        "nodeType": "ImportDirective",
        "src": "107:46:35",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48957,
        "sourceUnit": 25694,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48839,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25693,
              "src": "115:7:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48843,
        "nodeType": "ImportDirective",
        "src": "154:47:35",
        "nodes": [],
        "absolutePath": "lib/Fields.sol",
        "file": "../lib/Fields.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48957,
        "sourceUnit": 2280,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48841,
              "name": "Scalar",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2132,
              "src": "162:6:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 48842,
              "name": "Base",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1781,
              "src": "170:4:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48849,
        "nodeType": "UsingForDirective",
        "src": "203:51:35",
        "nodes": [],
        "functionList": [
          {
            "function": {
              "id": 48844,
              "name": "Base.add",
              "nameLocations": [
                "211:4:35",
                "216:3:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1597,
              "src": "211:8:35"
            }
          },
          {
            "function": {
              "id": 48845,
              "name": "Base.mul",
              "nameLocations": [
                "221:4:35",
                "226:3:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1611,
              "src": "221:8:35"
            }
          },
          {
            "function": {
              "id": 48846,
              "name": "Base.inv",
              "nameLocations": [
                "231:4:35",
                "236:3:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1643,
              "src": "231:8:35"
            }
          }
        ],
        "global": false,
        "typeName": {
          "id": 48848,
          "nodeType": "UserDefinedTypeName",
          "pathNode": {
            "id": 48847,
            "name": "Base.FE",
            "nameLocations": [
              "246:4:35",
              "251:2:35"
            ],
            "nodeType": "IdentifierPath",
            "referencedDeclaration": 1580,
            "src": "246:7:35"
          },
          "referencedDeclaration": 1580,
          "src": "246:7:35",
          "typeDescriptions": {
            "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
            "typeString": "Base.FE"
          }
        }
      },
      {
        "id": 48855,
        "nodeType": "UsingForDirective",
        "src": "255:59:35",
        "nodes": [],
        "functionList": [
          {
            "function": {
              "id": 48850,
              "name": "Scalar.add",
              "nameLocations": [
                "263:6:35",
                "270:3:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1832,
              "src": "263:10:35"
            }
          },
          {
            "function": {
              "id": 48851,
              "name": "Scalar.mul",
              "nameLocations": [
                "275:6:35",
                "282:3:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1846,
              "src": "275:10:35"
            }
          },
          {
            "function": {
              "id": 48852,
              "name": "Scalar.inv",
              "nameLocations": [
                "287:6:35",
                "294:3:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1918,
              "src": "287:10:35"
            }
          }
        ],
        "global": false,
        "typeName": {
          "id": 48854,
          "nodeType": "UserDefinedTypeName",
          "pathNode": {
            "id": 48853,
            "name": "Scalar.FE",
            "nameLocations": [
              "304:6:35",
              "311:2:35"
            ],
            "nodeType": "IdentifierPath",
            "referencedDeclaration": 1785,
            "src": "304:9:35"
          },
          "referencedDeclaration": 1785,
          "src": "304:9:35",
          "typeDescriptions": {
            "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
            "typeString": "Scalar.FE"
          }
        }
      },
      {
        "id": 48956,
        "nodeType": "ContractDefinition",
        "src": "316:532:35",
        "nodes": [
          {
            "id": 48906,
            "nodeType": "FunctionDefinition",
            "src": "350:237:35",
            "nodes": [],
            "body": {
              "id": 48905,
              "nodeType": "Block",
              "src": "382:205:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48864
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48864,
                      "mutability": "mutable",
                      "name": "q",
                      "nameLocation": "400:1:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 48905,
                      "src": "392:9:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                        "typeString": "Base.FE"
                      },
                      "typeName": {
                        "id": 48863,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48862,
                          "name": "Base.FE",
                          "nameLocations": [
                            "392:4:35",
                            "397:2:35"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1580,
                          "src": "392:7:35"
                        },
                        "referencedDeclaration": 1580,
                        "src": "392:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                          "typeString": "Base.FE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48873,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48868,
                            "name": "Base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1781,
                            "src": "417:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Base_$1781_$",
                              "typeString": "type(library Base)"
                            }
                          },
                          "id": 48869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "422:7:35",
                          "memberName": "MODULUS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1583,
                          "src": "417:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 48870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "432:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "417:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 48865,
                          "name": "Base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1781,
                          "src": "404:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Base_$1781_$",
                            "typeString": "type(library Base)"
                          }
                        },
                        "id": 48866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "409:2:35",
                        "memberName": "FE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1580,
                        "src": "404:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_FE_$1580_$",
                          "typeString": "type(Base.FE)"
                        }
                      },
                      "id": 48867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "412:4:35",
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "404:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_FE_$1580_$",
                        "typeString": "function (uint256) pure returns (Base.FE)"
                      }
                    },
                    "id": 48872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "404:30:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                      "typeString": "Base.FE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "392:42:35"
                },
                {
                  "assignments": [
                    48878
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48878,
                      "mutability": "mutable",
                      "name": "one",
                      "nameLocation": "452:3:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 48905,
                      "src": "444:11:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                        "typeString": "Base.FE"
                      },
                      "typeName": {
                        "id": 48877,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48876,
                          "name": "Base.FE",
                          "nameLocations": [
                            "444:4:35",
                            "449:2:35"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1580,
                          "src": "444:7:35"
                        },
                        "referencedDeclaration": 1580,
                        "src": "444:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                          "typeString": "Base.FE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48884,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 48882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "471:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 48879,
                          "name": "Base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1781,
                          "src": "458:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Base_$1781_$",
                            "typeString": "type(library Base)"
                          }
                        },
                        "id": 48880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "463:2:35",
                        "memberName": "FE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1580,
                        "src": "458:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_FE_$1580_$",
                          "typeString": "type(Base.FE)"
                        }
                      },
                      "id": 48881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "466:4:35",
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "458:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_FE_$1580_$",
                        "typeString": "function (uint256) pure returns (Base.FE)"
                      }
                    },
                    "id": 48883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "458:15:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                      "typeString": "Base.FE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "444:29:35"
                },
                {
                  "assignments": [
                    48889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48889,
                      "mutability": "mutable",
                      "name": "q_plus_one",
                      "nameLocation": "492:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 48905,
                      "src": "484:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                        "typeString": "Base.FE"
                      },
                      "typeName": {
                        "id": 48888,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48887,
                          "name": "Base.FE",
                          "nameLocations": [
                            "484:4:35",
                            "489:2:35"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1580,
                          "src": "484:7:35"
                        },
                        "referencedDeclaration": 1580,
                        "src": "484:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                          "typeString": "Base.FE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48894,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48892,
                        "name": "one",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48878,
                        "src": "511:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                          "typeString": "Base.FE"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                          "typeString": "Base.FE"
                        }
                      ],
                      "expression": {
                        "id": 48890,
                        "name": "q",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48864,
                        "src": "505:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                          "typeString": "Base.FE"
                        }
                      },
                      "id": 48891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "507:3:35",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1597,
                      "src": "505:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_userDefinedValueType$_FE_$1580_$_t_userDefinedValueType$_FE_$1580_$returns$_t_userDefinedValueType$_FE_$1580_$attached_to$_t_userDefinedValueType$_FE_$1580_$",
                        "typeString": "function (Base.FE,Base.FE) pure returns (Base.FE)"
                      }
                    },
                    "id": 48893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "505:10:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                      "typeString": "Base.FE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "484:31:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48899,
                            "name": "q_plus_one",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48889,
                            "src": "549:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                              "typeString": "Base.FE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_FE_$1580",
                              "typeString": "Base.FE"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 48896,
                              "name": "Base",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1781,
                              "src": "534:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Base_$1781_$",
                                "typeString": "type(library Base)"
                              }
                            },
                            "id": 48897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "539:2:35",
                            "memberName": "FE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1580,
                            "src": "534:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_FE_$1580_$",
                              "typeString": "type(Base.FE)"
                            }
                          },
                          "id": 48898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "542:6:35",
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "534:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_FE_$1580_$returns$_t_uint256_$",
                            "typeString": "function (Base.FE) pure returns (uint256)"
                          }
                        },
                        "id": 48900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "534:26:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 48901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "562:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "70203d3d2030206d6f642070",
                        "id": 48902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "565:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70305ca127f913e85626b54695dbe790d2690ab70fc2b9ed322068d9d15f1c5a",
                          "typeString": "literal_string \"p == 0 mod p\""
                        },
                        "value": "p == 0 mod p"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70305ca127f913e85626b54695dbe790d2690ab70fc2b9ed322068d9d15f1c5a",
                          "typeString": "literal_string \"p == 0 mod p\""
                        }
                      ],
                      "id": 48895,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6193,
                        6218,
                        6231,
                        6247,
                        6289,
                        6331,
                        6373,
                        6410,
                        6447,
                        6484,
                        3989,
                        4014,
                        4044,
                        4069,
                        4128,
                        4153,
                        4183,
                        4208,
                        5681,
                        5716
                      ],
                      "referencedDeclaration": 4208,
                      "src": "525:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "525:55:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48904,
                  "nodeType": "ExpressionStatement",
                  "src": "525:55:35"
                }
              ]
            },
            "functionSelector": "d0ce104a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_add_base",
            "nameLocation": "359:13:35",
            "parameters": {
              "id": 48858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "372:2:35"
            },
            "returnParameters": {
              "id": 48859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:0:35"
            },
            "scope": 48956,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 48955,
            "nodeType": "FunctionDefinition",
            "src": "593:253:35",
            "nodes": [],
            "body": {
              "id": 48954,
              "nodeType": "Block",
              "src": "627:219:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48913
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48913,
                      "mutability": "mutable",
                      "name": "q",
                      "nameLocation": "647:1:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 48954,
                      "src": "637:11:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                        "typeString": "Scalar.FE"
                      },
                      "typeName": {
                        "id": 48912,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48911,
                          "name": "Scalar.FE",
                          "nameLocations": [
                            "637:6:35",
                            "644:2:35"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1785,
                          "src": "637:9:35"
                        },
                        "referencedDeclaration": 1785,
                        "src": "637:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                          "typeString": "Scalar.FE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48922,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 48917,
                            "name": "Scalar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2132,
                            "src": "666:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Scalar_$2132_$",
                              "typeString": "type(library Scalar)"
                            }
                          },
                          "id": 48918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "673:7:35",
                          "memberName": "MODULUS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1796,
                          "src": "666:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 48919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "683:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "666:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 48914,
                          "name": "Scalar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2132,
                          "src": "651:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Scalar_$2132_$",
                            "typeString": "type(library Scalar)"
                          }
                        },
                        "id": 48915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "658:2:35",
                        "memberName": "FE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1785,
                        "src": "651:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_FE_$1785_$",
                          "typeString": "type(Scalar.FE)"
                        }
                      },
                      "id": 48916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "661:4:35",
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "651:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_FE_$1785_$",
                        "typeString": "function (uint256) pure returns (Scalar.FE)"
                      }
                    },
                    "id": 48921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "651:34:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                      "typeString": "Scalar.FE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "637:48:35"
                },
                {
                  "assignments": [
                    48927
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48927,
                      "mutability": "mutable",
                      "name": "one",
                      "nameLocation": "705:3:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 48954,
                      "src": "695:13:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                        "typeString": "Scalar.FE"
                      },
                      "typeName": {
                        "id": 48926,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48925,
                          "name": "Scalar.FE",
                          "nameLocations": [
                            "695:6:35",
                            "702:2:35"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1785,
                          "src": "695:9:35"
                        },
                        "referencedDeclaration": 1785,
                        "src": "695:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                          "typeString": "Scalar.FE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48933,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 48931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "726:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 48928,
                          "name": "Scalar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2132,
                          "src": "711:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Scalar_$2132_$",
                            "typeString": "type(library Scalar)"
                          }
                        },
                        "id": 48929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "718:2:35",
                        "memberName": "FE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1785,
                        "src": "711:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_FE_$1785_$",
                          "typeString": "type(Scalar.FE)"
                        }
                      },
                      "id": 48930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "721:4:35",
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "711:14:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_FE_$1785_$",
                        "typeString": "function (uint256) pure returns (Scalar.FE)"
                      }
                    },
                    "id": 48932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "711:17:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                      "typeString": "Scalar.FE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "695:33:35"
                },
                {
                  "assignments": [
                    48938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48938,
                      "mutability": "mutable",
                      "name": "q_plus_one",
                      "nameLocation": "749:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 48954,
                      "src": "739:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                        "typeString": "Scalar.FE"
                      },
                      "typeName": {
                        "id": 48937,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48936,
                          "name": "Scalar.FE",
                          "nameLocations": [
                            "739:6:35",
                            "746:2:35"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1785,
                          "src": "739:9:35"
                        },
                        "referencedDeclaration": 1785,
                        "src": "739:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                          "typeString": "Scalar.FE"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48943,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48941,
                        "name": "one",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48927,
                        "src": "768:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                          "typeString": "Scalar.FE"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                          "typeString": "Scalar.FE"
                        }
                      ],
                      "expression": {
                        "id": 48939,
                        "name": "q",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48913,
                        "src": "762:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                          "typeString": "Scalar.FE"
                        }
                      },
                      "id": 48940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "764:3:35",
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1832,
                      "src": "762:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_userDefinedValueType$_FE_$1785_$_t_userDefinedValueType$_FE_$1785_$returns$_t_userDefinedValueType$_FE_$1785_$attached_to$_t_userDefinedValueType$_FE_$1785_$",
                        "typeString": "function (Scalar.FE,Scalar.FE) pure returns (Scalar.FE)"
                      }
                    },
                    "id": 48942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "762:10:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                      "typeString": "Scalar.FE"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "739:33:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48948,
                            "name": "q_plus_one",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48938,
                            "src": "808:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                              "typeString": "Scalar.FE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_FE_$1785",
                              "typeString": "Scalar.FE"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 48945,
                              "name": "Scalar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2132,
                              "src": "791:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Scalar_$2132_$",
                                "typeString": "type(library Scalar)"
                              }
                            },
                            "id": 48946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "798:2:35",
                            "memberName": "FE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1785,
                            "src": "791:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_FE_$1785_$",
                              "typeString": "type(Scalar.FE)"
                            }
                          },
                          "id": 48947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "801:6:35",
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "791:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_FE_$1785_$returns$_t_uint256_$",
                            "typeString": "function (Scalar.FE) pure returns (uint256)"
                          }
                        },
                        "id": 48949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "791:28:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 48950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "821:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "70203d3d2030206d6f642070",
                        "id": 48951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "824:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70305ca127f913e85626b54695dbe790d2690ab70fc2b9ed322068d9d15f1c5a",
                          "typeString": "literal_string \"p == 0 mod p\""
                        },
                        "value": "p == 0 mod p"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70305ca127f913e85626b54695dbe790d2690ab70fc2b9ed322068d9d15f1c5a",
                          "typeString": "literal_string \"p == 0 mod p\""
                        }
                      ],
                      "id": 48944,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6193,
                        6218,
                        6231,
                        6247,
                        6289,
                        6331,
                        6373,
                        6410,
                        6447,
                        6484,
                        3989,
                        4014,
                        4044,
                        4069,
                        4128,
                        4153,
                        4183,
                        4208,
                        5681,
                        5716
                      ],
                      "referencedDeclaration": 4208,
                      "src": "782:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 48952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:57:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48953,
                  "nodeType": "ExpressionStatement",
                  "src": "782:57:35"
                }
              ]
            },
            "functionSelector": "ee324929",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_add_scalar",
            "nameLocation": "602:15:35",
            "parameters": {
              "id": 48907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "617:2:35"
            },
            "returnParameters": {
              "id": 48908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "627:0:35"
            },
            "scope": 48956,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48856,
              "name": "Test",
              "nameLocations": [
                "339:4:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15923,
              "src": "339:4:35"
            },
            "id": 48857,
            "nodeType": "InheritanceSpecifier",
            "src": "339:4:35"
          }
        ],
        "canonicalName": "FieldsTest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48956,
          15923,
          15872,
          11408,
          11083,
          10290,
          8230,
          7492,
          5960,
          6026,
          6023
        ],
        "name": "FieldsTest",
        "nameLocation": "325:10:35",
        "scope": 48957,
        "usedErrors": [],
        "usedEvents": [
          3674,
          3678,
          3682,
          3686,
          3690,
          3694,
          3698,
          3702,
          3708,
          3714,
          3722,
          3730,
          3736,
          3742,
          3748,
          3754,
          6087,
          6092,
          6097,
          6104,
          6111,
          6118
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 35
}
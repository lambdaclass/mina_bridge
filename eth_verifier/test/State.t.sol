// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.4.16 <0.9.0;

import {Test, console2} from "forge-std/Test.sol";
import "../src/Verifier.sol";
import "../src/VerifierDemo.sol";
import "../lib/msgpack/Deserialize.sol";

contract StateTest is Test {
    KimchiVerifierDemo verifier;

    function setUp() public virtual {
        bytes memory urs_serialized = vm.readFileBinary("urs.mpk");
        verifier = new KimchiVerifierDemo();
        verifier.setup(urs_serialized);
    }

    function test_verify_retrieve() public {
        bytes memory state_serialized =
            hex"93d937423632716a3238374c3162775039586775555262785735636e65545244384b6465347678336662655a434e784e78794d7a586473594c50d94b353238373731323331373633313534353334393439333639393138373535393036313938343735383336323633353931373132333136363738373232363934373434363136323434343035a6333033323130";
        bytes memory proof_serialized =
            hex"137B386B60C0B1EACD825BB5D7F8F9A75311C21BEB8A78AD4B1B917429DEB83C081677AECD36470CE9D97D4F7927F35B8D12315EF38A6E7D013866250B59CE892C5318092D9CFD60953C21CEC7596C081C244651BAB13D833D32C994713866320F62347F68390EF9243D355B0D5145E131BB25D9BD5FC198D6851C72CAFA647F1607206363F7EA00E0CE50C0B1DA51BAFE0B76CDCDDBAD364B0A4095CD589A19083C4DA5D257B99D25229FCF3B3885BB6D56FE821E8174C6F8F2B6671517F68B2692D3B51BB5602EEB3B9834B616E57FEE7283D7EA28F22E4263D78D90DB80A5003B6053211EE23338A695E2CFEFB1CE44D5458D0FB783A40F87C6D5C8AD90BE";
        verifier.verify_state(state_serialized, proof_serialized);
        assertEq(verifier.retrieve_state_creator(), "B62qj287L1bwP9XguURbxW5cneTRD8Kde4vx3fbeZCNxNxyMzXdsYLP");
        assertEq(
            verifier.retrieve_state_hash(), 528771231763154534949369918755906198475836263591712316678722694744616244405
        );
        assertEq(verifier.retrieve_state_height(), 303210);
    }
}

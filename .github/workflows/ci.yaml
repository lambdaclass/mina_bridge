name: CI
on:
    push:
        branches:
            - main
    pull_request:
        branches: ["*"]

jobs:
    public_input_gen:
        name: Public input generation
        uses: ./.github/workflows/rust_ci.yaml
        with:
            directory: public_input_gen

    verifier_circuit_tests:
        name: Execute o1js verifier circuit Rust tests for comparison
        uses: ./.github/workflows/rust_ci.yaml
        with:
            directory: verifier_circuit_tests

    verifier_circuit:
        name: Build and test o1js verifier circuit
        runs-on: ubuntu-selfhosted
        defaults:
            run:
                working-directory: ./verifier_circuit
        steps:
            - name: Checkout sources
              uses: actions/checkout@v4

            - name: Setup o1js submodule
              run: git submodule update --init --recursive

            - name: Set up dependencies
              run: npm ci

            - name: Run npm build
              run: npm run build

            - name: Run npm test
              run: npm run test

    integration:
        name: Integration test
        runs-on: ubuntu-selfhosted
        steps:
            - name: Checkout sources
              uses: actions/checkout@v4

            - name: Install Foundry
              uses: foundry-rs/foundry-toolchain@v1.2.0

            - name: Run integration test
              run: |
                export HOME="/root/"
                export PATH="/.foundry/bin:/root/.cargo/bin:$PATH"
                export GOPATH="/root/go"
                make

    eth_verifier:
        name: Test EVM verifier
        runs-on: ubuntu-selfhosted
        defaults:
            run:
                working-directory: ./eth_verifier
        steps:
            - name: Checkout sources
              uses: actions/checkout@v4

            - name: Install Foundry
              uses: foundry-rs/foundry-toolchain@v1.2.0

            - name: Run tests
              run: |
                export HOME="/root/"
                #export PATH="/.foundry/bin:/root/.cargo/bin:$PATH"
                export GOPATH="/root/go"
                make test > ../gasreport.ansi
              env:
                # make fuzzing semi-deterministic to avoid noisy gas cost estimation
                # due to non-deterministic fuzzing (but still use pseudo-random fuzzing seeds)
                FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}
            - name: Compare gas reports
              uses: Rubilmax/foundry-gas-diff@v3.16
              with:
                summaryQuantile: 0.9 # only display the 10% most significant gas diffs in the summary (defaults to 20%)
                sortCriteria: avg,max # sort diff rows by criteria
                sortOrders: desc,asc # and directions
              id: gas_diff

            - name: Add gas diff to sticky comment
              if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
              uses: marocchino/sticky-pull-request-comment@v2
              with:
                # delete the comment in case changes no longer impact gas costs
                delete: ${{ !steps.gas_diff.outputs.markdown }}
                message: ${{ steps.gas_diff.outputs.markdown }}

    merkle_path:
        name: Test Merkle Path parser
        uses: ./.github/workflows/rust_ci.yaml
        with:
            skip_run: true
            directory: merkle_path
